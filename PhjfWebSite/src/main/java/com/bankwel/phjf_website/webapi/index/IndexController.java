package com.bankwel.phjf_website.webapi.index;

import com.bankwel.framework.core.F;
import com.bankwel.framework.core.excep.MsgBusinessException;
import com.bankwel.framework.core.kit.DeviceGeoPageModel;
import com.bankwel.framework.core.kit.TpsLogoKit;
import com.bankwel.framework.support.jfinal.BaseController;
import com.bankwel.framework.support.jfinal.ControllerBind;
import com.bankwel.phjf_website.service.*;
import com.jfinal.aop.Duang;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import com.jfinal.core.ActionKey;

import java.util.List;
import java.util.Map;

/**
 * Generated by su_ln on 2016/2/24.
 */

/**
 * 首页
 */
//@ControllerBind(key="/")
public class IndexController extends BaseController {
    private static final Logger log = LoggerFactory.getLogger(IndexController.class);
    WebIndexService webIndexService = Duang.duang(WebIndexService.class);
    BankService bankService = Duang.duang(BankService.class);

    @ActionKey("/")
    public void index(){
        log.info("RequestURI=[{}] RealIpAddr=[{}] params=[{}]", this.getRequest().getRequestURI(),this.getRealIpAddr(),this.getReqParameterMap());
        long tps_startTime = System.currentTimeMillis();
        Map returnMap = null;
        try {
            DeviceGeoPageModel dg = this.getDeviceAndGeo();
            Map data = webIndexService.queryIndexInfo(dg.getLanguage());
            returnMap = F.transKit.asMap("code", 1, "msg", "", "data",data);
        } catch (MsgBusinessException e){
            e.printStackTrace();
            log.error("",e);
            returnMap = F.transKit.asMap("code", e.getSuccess(), "msg", e.getMessage(),"data","");
        } catch (Exception e){
            e.printStackTrace();
            log.error("",e);
            returnMap = F.transKit.asMap("code", 2, "msg", "很抱歉！操作失败，请检查网络是否通畅！","data","") ;
        }
        TpsLogoKit.addPoint(this.getRequest().getRequestURI(),tps_startTime,System.currentTimeMillis());
//        this.renderJson(returnMap);
        this.setAttrs(returnMap);
        render("/zh/index.html");
    }
    /**
     * 疆内平台
     */
    @ActionKey("/financeInXinJiang")
    public void financeInXinJiang(){
        log.info("RequestURI=[{}] RealIpAddr=[{}] params=[{}]", this.getRequest().getRequestURI(),this.getRealIpAddr(),this.getReqParameterMap());
        long tps_startTime = System.currentTimeMillis();
        Map map = null;
        try {
            Map result = F.transKit.asMap("currentPage","financeInXinJiang");
            map = F.transKit.asMap("code", 1, "msg", "", "data",result);
        } catch (MsgBusinessException e){
            e.printStackTrace();
            log.error("",e);
            map = F.transKit.asMap("code", e.getSuccess(), "msg", e.getMessage(),"data","");
        } catch (Exception e){
            e.printStackTrace();
            log.error("",e);
            map = F.transKit.asMap("code", 2, "msg", "很抱歉！操作失败，请检查网络是否通畅！","data","") ;
        }
        TpsLogoKit.addPoint(this.getRequest().getRequestURI(),tps_startTime,System.currentTimeMillis());
        this.setAttrs(map);
        render("/velocity/showBoards/financeInXinJiang.vm");
    }
    /**
     * 金融网点分布
     */
    @ActionKey("/financeBank")
    public void financeBank(){
        log.info("RequestURI=[{}] RealIpAddr=[{}] params=[{}]", this.getRequest().getRequestURI(),this.getRealIpAddr(),this.getReqParameterMap());
        long tps_startTime = System.currentTimeMillis();
        Map map = null;
        try {
            List<Map> bankTypeList = bankService.queryBankTypeList();
            Map result = F.transKit.asMap("currentPage", "financeBank", "bankTypeList", bankTypeList);
            map = F.transKit.asMap("code", 1, "msg", "", "data",result);
        } catch (MsgBusinessException e){
            e.printStackTrace();
            log.error("",e);
            map = F.transKit.asMap("code", e.getSuccess(), "msg", e.getMessage(),"data","");
        } catch (Exception e){
            e.printStackTrace();
            log.error("",e);
            map = F.transKit.asMap("code", 2, "msg", "很抱歉！操作失败，请检查网络是否通畅！","data","") ;
        }
        TpsLogoKit.addPoint(this.getRequest().getRequestURI(),tps_startTime,System.currentTimeMillis());
        this.setAttrs(map);
        render("/velocity/showBoards/financeBankShow.vm");
    }
    /**
     * 普惠通
     */
    @ActionKey("/puHuiTong")
    public void puHuiTong(){
        log.info("RequestURI=[{}] RealIpAddr=[{}] params=[{}]", this.getRequest().getRequestURI(),this.getRealIpAddr(),this.getReqParameterMap());
        long tps_startTime = System.currentTimeMillis();
        Map map = null;
        try {
            Map result = F.transKit.asMap("currentPage","puHuiTong");
            map = F.transKit.asMap("code", 1, "msg", "", "data",result);
        } catch (MsgBusinessException e){
            e.printStackTrace();
            log.error("",e);
            map = F.transKit.asMap("code", e.getSuccess(), "msg", e.getMessage(),"data","");
        } catch (Exception e){
            e.printStackTrace();
            log.error("",e);
            map = F.transKit.asMap("code", 2, "msg", "很抱歉！操作失败，请检查网络是否通畅！","data","") ;
        }
        TpsLogoKit.addPoint(this.getRequest().getRequestURI(),tps_startTime,System.currentTimeMillis());
        this.setAttrs(map);
        render("/velocity/showBoards/puHuiTong.vm");
    }
    /**
     * 普惠通列表页
     */
    @ActionKey("/puHuiTongList")
    public void puHuiTongList(){
        log.info("RequestURI=[{}] RealIpAddr=[{}] params=[{}]", this.getRequest().getRequestURI(),this.getRealIpAddr(),this.getReqParameterMap());
        long tps_startTime = System.currentTimeMillis();
        Map map = null;
        try {
            String crumbName = this.getPara("crumbName","");
            Map result = F.transKit.asMap("currentPage","puHuiTong","crumbName",crumbName);
            map = F.transKit.asMap("code", 1, "msg", "", "data",result);
        } catch (MsgBusinessException e){
            e.printStackTrace();
            log.error("",e);
            map = F.transKit.asMap("code", e.getSuccess(), "msg", e.getMessage(),"data","");
        } catch (Exception e){
            e.printStackTrace();
            log.error("",e);
            map = F.transKit.asMap("code", 2, "msg", "很抱歉！操作失败，请检查网络是否通畅！","data","") ;
        }
        TpsLogoKit.addPoint(this.getRequest().getRequestURI(),tps_startTime,System.currentTimeMillis());
        this.setAttrs(map);
        render("/velocity/showBoards/puHuiTongList.vm");
    }
    /**
     * 新闻详情
     */
    @ActionKey("/newsInfo")
    public void newsInfo(){
        log.info("RequestURI=[{}] RealIpAddr=[{}] params=[{}]", this.getRequest().getRequestURI(),this.getRealIpAddr(),this.getReqParameterMap());
        long tps_startTime = System.currentTimeMillis();
        Map map = null;
        try {
            DeviceGeoPageModel dg = this.getDeviceAndGeo();
            String articleCode = this.getPara("article_code");
            Map data = NewsService.findArticle(articleCode,dg.getLanguage());
            map = F.transKit.asMap("code", 1, "msg", "", "data",data);
        } catch (MsgBusinessException e){
            e.printStackTrace();
            log.error("",e);
            map = F.transKit.asMap("code", e.getSuccess(), "msg", e.getMessage(),"data","");
        } catch (Exception e){
            e.printStackTrace();
            log.error("",e);
            map = F.transKit.asMap("code", 2, "msg", "很抱歉！操作失败，请检查网络是否通畅！","data","") ;
        }
        TpsLogoKit.addPoint(this.getRequest().getRequestURI(),tps_startTime,System.currentTimeMillis());
        this.setAttrs(map);
        render("/velocity/showBoards/newsInfo.vm");
    }

}
