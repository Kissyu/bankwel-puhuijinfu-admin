package com.bankwel.phjf_website.common.model.website;

import com.bankwel.framework.core.F;
import com.bankwel.phjf_website.common.model.website.base.BaseBankInfo;
import com.jfinal.plugin.activerecord.Db;

import java.util.ArrayList;
import java.util.List;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class BankInfo extends BaseBankInfo<BankInfo> {
	public static final BankInfo dao = new BankInfo().dao();

	/**
	 * 获取银行机构列表
	 * @return
	 */
	public List<BankInfo> queryBankList(String bt_code, String geohash,String lat,String lng){
		String sql = "select * " +
				"       from phjf_bank_info bank" +
				"      where geohash like concat(?,'%') " +
				"        and language = 'ZH_SIMP' " +
				"        and status = '1' " +
				"        and is_show = 'Y' " ;
		List params = new ArrayList();
		params.add(geohash);
		if (F.validate.isNotEmpty(bt_code)){
			sql += "    and bt_code = ? ";
			params.add(bt_code);
		}
		sql += "  and lat is not null and lng is not null  order by fun_dis(?,?,bank.lat,bank.lng)     limit 200 ";
		params.add(lat);
		params.add(lng);
		return dao.use("DBPublic").find(sql, params.toArray());
	}

	/**
	 * 获取银行机构列表
	 * @return
	 */
	public List<BankInfo> queryBankListAllName(String bt_code, String geohash, String lat, String lng){
		String sql = "select  bank.bank_id," +
				"bank.bank_code," +
				"bank.`language`," +
				"bank.bt_code," +
				"CASE WHEN bank.`name` like concat('%',bt.`name`,'%')  THEN bank.`name` else concat(bt.`name`,bank.`name`)  END  as `name`,\n" +
				"bank.parent_bank_code," +
				"bank.address," +
				"bank.email," +
				"bank.telephone," +
				"  bank.mobilephone,bank.lat," +
				"  bank.lng," +
				"  bank.geohash" +
				"       from phjf_bank_info bank , phjf_bank_type bt" +
				"      where bank.bt_code = bt.bt_code and bank.geohash like concat(?,'%') " ;
		List params = new ArrayList();
		params.add(geohash);
		sql +=	"    and bank.language = 'ZH_SIMP' " +
				"    and bank.status = '1' " +
				"    and bank.is_show = 'Y' " ;
		if (F.validate.isNotEmpty(bt_code)){
			sql += "    and bank.bt_code = ? ";
			params.add(bt_code);
		}
		sql += "  and bank.lat is not null and lng is not null  order by fun_dis(?,?,bank.lat,bank.lng)     limit 200 ";
		params.add(lat);
		params.add(lng);
		return dao.use("DBPublic").find(sql, params.toArray());
	}
}
