package com.bankwel.phjf_website.common.model.website;

import com.bankwel.framework.core.F;
import com.bankwel.phjf_website.common.model.website.base.BaseBankAtm;

import java.util.ArrayList;
import java.util.List;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class BankAtm extends BaseBankAtm<BankAtm> {
	public static final BankAtm dao = new BankAtm().dao();

	/**
	 * 获取银行机构列表
	 * @return
	 */
	public List<BankAtm> queryBankAtmList(String bt_code, String geohash,String lat,String lng){
		String sql = "select * " +
				"       from phjf_bank_atm atm " +
				"      where geohash like concat(?,'%') " +
//				"        and language = 'ZH_SIMP' " +
				"        and status = '1' " +
				"        and is_show = 'Y' ";
		List params = new ArrayList();
		params.add(geohash);
		if (F.validate.isNotEmpty(bt_code)){
			sql += "    and bt_code = ? ";
			params.add(bt_code);
		}
		sql += " and lat is not null and lng is not null  order by fun_dis(?,?,atm.lat,atm.lng)     limit 100 ";
		params.add(lat);
		params.add(lng);
		return dao.use("DBPublic").find(sql, params.toArray());
	}

	/**
	 * 获取银行机构列表
	 * @return
	 */
	public List<BankAtm> queryBankAtmListAllName(String bt_code, String geohash,String lat,String lng){
		String sql = "select atm.seq_uuid," +
				"atm.bank_atm_id," +
				"atm.bt_code," +
				"atm.bank_code," +
				"atm.atm_code," +
				"atm.`language`," +
				"  CASE WHEN atm.`name` like concat('%',bt.`name`,'%')  THEN atm.`name` else concat(bt.`name`,atm.`name`)  END  as `name`,\n" +
				"  atm.lat," +
				"  atm.lng," +
				"  atm.geohash," +
				"  atm.address," +
				"  atm.email," +
				"  atm.telephone," +
				"  atm.mobilephone" +
				"       from phjf_bank_atm atm,phjf_bank_type bt " +
				"      where atm.bt_code = bt.bt_code and " +
				" atm.geohash like concat(?,'%') " +
//				"        and language = 'ZH_SIMP' " +
				"        and atm.status = '1' " +
				"        and atm.is_show = 'Y' ";
		List params = new ArrayList();
		params.add(geohash);
		if (F.validate.isNotEmpty(bt_code)){
			sql += "    and atm.bt_code = ? ";
			params.add(bt_code);
		}
		sql += " and atm.lat is not null and atm.lng is not null  order by fun_dis(?,?,atm.lat,atm.lng)     limit 100 ";
		params.add(lat);
		params.add(lng);
		return dao.use("DBPublic").find(sql, params.toArray());
	}
}
