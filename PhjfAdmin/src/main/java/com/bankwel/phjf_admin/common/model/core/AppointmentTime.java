package com.bankwel.phjf_admin.common.model.core;


import com.bankwel.framework.core.F;
import com.bankwel.framework.core.excep.MsgBusinessException;
import com.bankwel.framework.core.kit.JFinalDbKit;
import com.bankwel.framework.core.kit.PageKit;
import com.bankwel.phjf_admin.common.model.core.base.BaseAppointmentTime;
import com.jfinal.plugin.activerecord.Db;
import com.jfinal.plugin.activerecord.Record;
import org.apache.commons.lang3.tuple.Pair;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.UUID;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class AppointmentTime extends BaseAppointmentTime<AppointmentTime> {
	public static final AppointmentTime dao = new AppointmentTime().dao();

	public Pair<List<Record>,PageKit<Record>> queryAmTimeByPage(String institution_type,String bt_name, String status,String param_code, PageKit page){
		String sql = "select at.seq_uuid," +
				"            at.seq_id," +
				"            at.institution_code bt_code," +
				"            at.param_code," +
				"            at.describe, " +
				"            at.time_format," +
				"            at.start_time," +
				"            at.end_time," +
				"            at.create_time," +
				"            status.name status_show," +
				"            isShow.name is_show_name, " +
				"            tf.name tf_name,  " +
				"            bt.name bt_name, " +
				"            bf.name param_name  " +
				"       from phjf_appointment_time at " +
				"            left join phjf_bank_type bt on at.institution_code = bt.bt_code and bt.language = 'ZH_SIMP' " +
				"            left join sys_datalibrary status on status.parent_code = 'sys_status' and status.code = at.status" +
				"            left join sys_datalibrary isShow on isShow.parent_code = 'sys_isShow' and isShow.code = at.is_show" +
				"            left join sys_datalibrary tf on tf.parent_code = 'amTime_format' and tf.code = at.time_format" +
				"            left join sys_datalibrary bf on bf.parent_code = 'bank_function' and bf.code = at.param_code " +
				"      where 1=1";
		List params = new ArrayList();
		if (F.validate.isNotEmpty(institution_type)){
			sql += " and at.institution_type = ? ";
			params.add(institution_type);
		}
		if (F.validate.isNotEmpty(bt_name)){
			sql += " and (bt.name LIKE concat('%',?,'%') or at.institution_code = ?)";
			params.add(bt_name);
			params.add(bt_name);
		}
		if (F.validate.isNotEmpty(status)){
			sql += " and at.status = ? ";
			params.add(status);
		}
		if (F.validate.isNotEmpty(param_code)){
			sql += " and at.param_code = ? ";
			params.add(status);
		}
		sql += " and at.business_stat = 'N' order by at.create_time desc";
		return JFinalDbKit.paginate(Db.use("DBPublic"), page.getNowPage(), page.getRowsPerPage(), sql, params.toArray());
	}
	/**
	 * 保存或修改
	 * @param opt
	 * @return
	 */
	public AppointmentTime saveOrUpdate(AuthOperator opt) throws MsgBusinessException {
		this.checkModelItem();
		if (this.getSeq_uuid() != null){
			this.setModify_opt(opt.getSeq_id()+"");
			this.setModify_time(new Date());
			if(F.validate.isEmpty(this.getIs_show())){
				this.setIs_show("Y");
			}else{
				if(this.getStatus().equals("N")) {
					this.setIs_show("N");
				}else{
					this.setIs_show("Y");
				}
			}
			this.update();
		} else {
			this.setSeq_uuid(UUID.randomUUID().toString());
			this.setCreate_opt(opt.getSeq_id()+"");
			this.setCreate_time(new Date());
			this.setModify_opt(opt.getSeq_id()+"");
			this.setModify_time(new Date());
			this.save();
		}
		return this;
	}
	public void checkModelItem() {
		//check
	}

	public AppointmentTime findById(String seq_uuid){
		String sql = "select * " +
				"       from phjf_appointment_time " +
				"      where seq_uuid = ? " +
				"      limit 1 ";
		AppointmentTime data = dao.use("DBPublic").findFirst(sql, seq_uuid);
		if (F.validate.isEmpty(data)){
			data = new AppointmentTime();
		}
		return data;
	}
}
