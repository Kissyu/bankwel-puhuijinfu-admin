package com.bankwel.phjf_admin.common.model.core;

import com.bankwel.framework.core.F;
import com.bankwel.framework.core.excep.MsgBusinessException;
import com.bankwel.framework.core.kit.JFinalDbKit;
import com.bankwel.framework.core.kit.PageKit;
import com.bankwel.phjf_admin.common.model.core.base.BaseWebAboutUs;
import com.bankwel.phjf_baseModel.common.model.phjf.CacheWebAboutUs;
import com.jfinal.plugin.activerecord.Db;
import com.jfinal.plugin.activerecord.Record;
import org.apache.commons.lang3.tuple.Pair;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.UUID;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class WebAboutUs extends CacheWebAboutUs<WebAboutUs> {
	public static final WebAboutUs dao = new WebAboutUs().dao();
	/**
	 * 新增或修改关于我们
	 * @param opt
	 * @return
	 */
	public WebAboutUs saveOrUpdate(AuthOperator opt) throws MsgBusinessException{
		this.checkModelItem();
		if (F.validate.isNotEmpty(this.getAu_id()+"")&&!(this.getAu_id().equals(0))){
			this.setModify_user(opt.getSeq_id()+"");
			this.setModify_time(new Date());
			if(F.validate.isEmpty(this.getIs_show())){
				this.setIs_show("Y");
			}
			this.update();
		} else {
			if (F.validate.isEmpty(this.getAu_code())){
				this.setAu_code(SysSeq.dao.generatorWebAboutUsCode());
			}
			this.setSeq_uuid(UUID.randomUUID().toString());
			this.setIs_show("Y");
			this.setStatus("1");
			this.setCreate_user(opt.getSeq_id()+"");
			this.setCreate_time(new Date());
			this.setModify_user(opt.getSeq_id()+"");
			this.setModify_time(new Date());
			this.save();
		}
		flashCatch(this);
		return this;
	}

	public void checkModelItem(){
		this.checkAu_id("关于我们ID标识");
		this.checkAu_code("关于我们编码");
		this.checkNav_name("关于我们名称");
		this.checkNav_code("关于我们所属导航");
		this.checkLanguage("语言");
		this.checkContent("关于我们内容");
	}
	/**
	 * 获取关于我们列表
	 * @param nav_code
	 * @param language
	 * @param status
	 * @param page
	 * @return
	 */
	public Pair<List<Record>,PageKit<Record>> queryAboutUsByPage(String nav_code, String language, String status, PageKit page){
		String sql = "select au.seq_uuid," +
				"            au.au_id," +
				"            au.au_code," +
				"            au.language," +
				"            au.nav_code," +
				"            au.nav_name," +
				"            au.content," +
				"            au.orders," +
				"            au.status," +
				"            au.create_time," +
				"            status.name status_show," +
				"            is_show.name is_show_name" +
				"       from phjf_web_about_us au" +
				"            left join sys_datalibrary status on status.parent_code = 'sys_status' and status.code = au.status" +
				"            left join sys_datalibrary is_show on is_show.parent_code = 'sys_isShow' and is_show.code = au.is_show" +
				"      where 1=1";
		List params = new ArrayList();
		if (F.validate.isNotEmpty(nav_code)){
			sql += " and au.nav_code = ? ";
			params.add(nav_code);
		}
		if (F.validate.isNotEmpty(language)){
			sql += " and au.language = ? ";
			params.add(language);
		}
		if (F.validate.isNotEmpty(status)){
			sql += " and au.status = ? ";
			params.add(status);
		}
		sql += " order by au.orders asc";
		return JFinalDbKit.paginate(Db.use("DBPublic"), page.getNowPage(), page.getRowsPerPage(), sql, params.toArray());
	}

	/**
	 * 通过ID获取关于我们
	 * @param seq_uuid
	 * @return
	 */
	public WebAboutUs findById(String seq_uuid){
		String sql = "select * " +
				"       from phjf_web_about_us " +
				"      where seq_uuid = ? " +
				"      limit 1";
		WebAboutUs data = WebAboutUs.dao.use("DBPublic").findFirst(sql,seq_uuid);
		if(F.validate.isEmpty(data)){
			data = new WebAboutUs();
		}
		return data;
	}

	/**
	 *通过au_code获取关于我们
	 * @param au_code
	 * @return
	 */
	public List<WebAboutUs> findByAboutUsCode(String au_code){
		String sql = "select * " +
				"       from phjf_web_about_us " +
				"      where au_code = ? " +
				"        and status = 1 ";
		return WebAboutUs.dao.use("DBPublic").find(sql,au_code);
	}

	/**
	 * 获取语言的中文名
	 * @return
	 */
	public String findLanguage_show(){
		SysDatalibrary library = SysDatalibrary.dao.queryDatalibrary("Phjf", "sys_language", this.getLanguage());
		return library.getName();
	}

	/**
	 * 通过code和语言获取关于我们
	 * @param au_code
	 * @param language
	 * @return
	 */
	public WebAboutUs findWebAboutUs(String au_code, String language){
		String sql = "select * " +
				"       from phjf_web_about_us " +
				"      where au_code = ? " +
				"        and language = ?" +
				"        and status = 1" +
				"      limit 1";
		WebAboutUs data = WebAboutUs.dao.use("DBPublic").findFirst(sql,au_code,language);
		if(F.validate.isEmpty(data)){
			data = new WebAboutUs();
		}
		return data;
	}
	/**
	 * 通过code和语言判断判断该导航是否添加过内容
	 * @param nav_code
	 * @param language
	 * @return
	 */
	public Boolean isExistNav(String nav_code, String language){
		String sql = "select * " +
				"       from phjf_web_about_us " +
				"      where nav_code = ? " +
				"        and language = ?" +
				"        and status = 1" +
				"      limit 1";
		WebAboutUs data = WebAboutUs.dao.use("DBPublic").findFirst(sql,nav_code,language);
		if(F.validate.isEmpty(data)){
			return false;
		}
		return true;
	}
	/**
	 * 获取关于我们导航列表
	 * @return
	 */
	public List<WebNav> queryAboutUsCmsList(String language){
		String sql = "select * " +
				"       from phjf_web_nav nav " +
				"  inner join phjf_web_about_us about on about.nav_code = nav.nav_code and about.language = nav.language and nav.status = 1 and nav.is_show = 'Y'" +
				"      where about.language = ? " +
				"        and about.is_show = 'Y'" +
				"        and about.status = '1' order by about.orders ";
		return WebNav.dao.use("DBPublic").find(sql,language);
	}
	/**
	 * 通过ID和语言获取关于我们页面及地址
	 * @param seq_uuid
	 * @return
	 */
	public WebNav findWebAboutUsInfo(String seq_uuid){
		String sql = "select " +
				"            *" +
				"       from phjf_web_nav nav " +
				"  left join phjf_web_about_us about on about.nav_code = nav.nav_code and about.language = nav.language " +
				"      where about.seq_uuid = ? " +
				"      limit 1";
		WebNav data = WebNav.dao.use("DBPublic").findFirst(sql,seq_uuid);
		if(F.validate.isEmpty(data)){
			data = new WebNav();
		}
		return data;
	}
}
