package com.bankwel.phjf_admin.common.model.core;

import com.bankwel.framework.core.F;
import com.bankwel.framework.core.excep.MsgBusinessException;
import com.bankwel.framework.core.kit.JFinalDbKit;
import com.bankwel.framework.core.kit.PageKit;
import com.bankwel.phjf_admin.common.model.core.base.BaseAppInfo;
import com.bankwel.phjf_baseModel.common.model.phjf.CacheAppInfo;
import com.jfinal.plugin.activerecord.Db;
import com.jfinal.plugin.activerecord.Record;
import org.apache.commons.lang3.tuple.Pair;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.UUID;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class AppInfo extends CacheAppInfo<AppInfo> {
	public static final AppInfo dao = new AppInfo().dao();
	/**
	 * 保存或更新app信息
	 * @param opt
	 * @return
	 */
	public AppInfo saveOrUpdate(AuthOperator opt) throws MsgBusinessException{
		this.checkModelItem();
		if (F.validate.isNotEmpty(this.getApp_id()+"")&&!(this.getApp_id().equals(0))){
			this.setModify_opt(opt.getSeq_id()+"");
			this.setModify_time(new Date());
			this.update();
		} else {
			if (F.validate.isEmpty(this.getApp_code())){
				this.setApp_code(SysSeq.dao.generatorAPPCode());
			}
			this.setSeq_uuid(UUID.randomUUID().toString());
			this.setIs_show("Y");
			this.setStatus("1");
			this.setCreate_opt(opt.getSeq_id()+"");
			this.setCreate_time(new Date());
			this.setModify_opt(opt.getSeq_id()+"");
			this.setModify_time(new Date());
			this.save();
		}
		flashCatch(this);
		return this;
	}
	public void checkModelItem(){
		this.checkApp_code("app内部编码");
		this.checkLanguage("语言");
		this.checkPackage_name("APP包名");
		this.checkName("APP名称");
		this.checkShare_count("分享打开次数");
		this.checkDownload_count("下载打开次数");
		this.checkIs_show("显示状态");
		this.checkStatus("状态");
		this.checkRemark("备注信息");
	}
	/**
	 * 获取app信息列表
	 * @param name
	 * @param language
	 * @param status
	 * @param page
	 * @return
	 */
	public Pair<List<Record>,PageKit<Record>> queryAppInfoByPage(String name, String language,String status, PageKit page){
		String sql = "select app.seq_uuid," +
				"            app.app_id," +
				"            app.app_code," +
				"            app.language," +
				"            app.package_name," +
				"            app.name," +
				"            app.remark," +
				"            app.create_time," +
				"            app.is_show," +
				"            app.status," +
				"            status.name status_show," +
				"            is_show.name is_show_name" +
				"       from phjf_app_info app" +
				"            left join sys_datalibrary status on status.parent_code = 'sys_status' and status.code = app.status" +
				"            left join sys_datalibrary is_show on is_show.parent_code = 'sys_isShow' and is_show.code = app.is_show" +
				"      where 1=1";
		List params = new ArrayList();
		if (F.validate.isNotEmpty(name)){
			sql += " and (app.name LIKE concat('%',?,'%') or app.app_code = ?)";
			params.add(name);
			params.add(name);
		}
		if (F.validate.isNotEmpty(language)){
			sql += " and app.language = ?";
			params.add(language);
		}
		if (F.validate.isNotEmpty(status)){
			sql += " and app.status = ? ";
			params.add(status);
		}
		sql += " order by app.create_time desc";
		return JFinalDbKit.paginate(Db.use("DBPublic"), page.getNowPage(), page.getRowsPerPage(), sql, params.toArray());
	}

	/**
	 * 通过ID获取app信息
	 * @param seq_uuid
	 * @return
	 */
	public AppInfo findById(String seq_uuid){
		String sql = "select * " +
				"       from phjf_app_info " +
				"      where seq_uuid = ? " +
				"      limit 1";
		AppInfo data = AppInfo.dao.use("DBPublic").findFirst(sql,seq_uuid);
		if(F.validate.isEmpty(data)){
			data = new AppInfo();
		}
		return data;
	}

	/**
	 * 通过app_code查找app信息
	 * @param app_code
	 * @return
	 */
	public List<AppInfo> findByAppCode(String app_code){
		String sql = "select * " +
				"       from phjf_app_info " +
				"      where app_code = ? " +
				"        and status = 1" +
				"      limit 1";
		return AppInfo.dao.use("DBPublic").find(sql,app_code);
	}

	/**
	 * 通过name查找app信息
	 * @param name
	 * @return
	 */
	public AppInfo findByName(String name){
		String sql = "select * " +
				"       from phjf_app_info " +
				"      where name = ? " +
				"        and status = 1" +
				"      limit 1";
		AppInfo data = AppInfo.dao.use("DBPublic").findFirst(sql,name);
		if(F.validate.isEmpty(data)){
			data = new AppInfo();
		}
		return data;
	}

	/**
	 * 判断name是否已经存在
	 * @param seq_uuid
	 * @param name
	 * @return
	 */
	public Boolean isHasName(String seq_uuid,String name){
		String sql = "select * " +
				"       from phjf_app_info " +
				"      where seq_uuid != ? " +
				"        and name = ?" +
				"        and status = 1" +
				"      limit 1";
		AppInfo appInfo = AppInfo.dao.use("DBPublic").findFirst(sql,seq_uuid,name);
		if (F.validate.isEmpty(appInfo)){
			return false;
		}
		return true;
	}

	/**
	 * 通过package_name查找app信息
	 * @param package_name
	 * @return
	 */
	public AppInfo findByPackageName(String package_name){
		String sql = "select * " +
				"       from phjf_app_info " +
				"      where package_name = ? " +
				"        and status = 1" +
				"      limit 1";
		AppInfo data = AppInfo.dao.use("DBPublic").findFirst(sql,package_name);
		if(F.validate.isEmpty(data)){
			data = new AppInfo();
		}
		return data;
	}

	/**
	 * 判断package_name是否已经存在
	 * @param seq_uuid
	 * @param package_name
	 * @return
	 */
	public Boolean isHasPackageName(String seq_uuid,String package_name){
		String sql = "select * " +
				"       from phjf_app_info " +
				"      where seq_uuid != ? " +
				"        and package_name = ?" +
				"        and status = 1" +
				"      limit 1";
		AppInfo appInfo = AppInfo.dao.use("DBPublic").findFirst(sql,seq_uuid,package_name);
		if (F.validate.isEmpty(appInfo)){
			return false;
		}
		return true;
	}

	/**
	 * 通过app_id获取App
	 * @param app_id
	 * @return
	 */
	public AppInfo findAppByAppId(String app_id){
		String sql = "select * " +
				"       from phjf_app_info " +
				"      where app_id = ? " +
				"        and status = 1 " +
				"      limit 1 ";
		AppInfo data = AppInfo.dao.use("DBPublic").findFirst(sql, app_id);
		return data;
	}
	/**
	 * 获取语言的中文名
	 * @return
	 */
	public String findLanguage_show(){
		SysDatalibrary library = SysDatalibrary.dao.queryDatalibrary("Phjf", "sys_language", this.getLanguage());
		return library.getName();
	}
}
