package com.bankwel.phjf_admin.common.model.core;

import com.bankwel.framework.core.F;
import com.bankwel.framework.core.excep.MsgBusinessException;
import com.bankwel.framework.core.kit.JFinalDbKit;
import com.bankwel.framework.core.kit.PageKit;
import com.bankwel.phjf_admin.common.model.core.base.BaseWebBanner;
import com.bankwel.phjf_baseModel.common.model.phjf.CacheWebBanner;
import com.jfinal.plugin.activerecord.Db;
import com.jfinal.plugin.activerecord.Record;
import org.apache.commons.lang3.tuple.Pair;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.UUID;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class WebBanner extends CacheWebBanner<WebBanner> {
	public static final WebBanner dao = new WebBanner().dao();
	/**
	 * 新增或修改广告位
	 * @param opt
	 * @return
	 */
	public WebBanner saveOrUpdate(AuthOperator opt) throws MsgBusinessException{
		this.checkModelItem();
		if (F.validate.isNotEmpty(this.getBanner_id()+"")&&!(this.getBanner_id().equals(0))){
			this.setModify_user(opt.getSeq_id()+"");
			this.setModify_time(new Date());
			if(F.validate.isEmpty(this.getIs_show())){
				this.setIs_show("Y");
			}
			this.update();
		} else {
			if (F.validate.isEmpty(this.getBanner_code())){
				this.setBanner_code(SysSeq.dao.generatorWebBannerCode());
			}
			this.setSeq_uuid(UUID.randomUUID().toString());
			this.setIs_show("Y");
			this.setStatus("1");
			this.setCreate_user(opt.getSeq_id()+"");
			this.setCreate_time(new Date());
			this.setModify_user(opt.getSeq_id()+"");
			this.setModify_time(new Date());
			this.save();
		}
		flashCatch(this);
		return this;
	}
	public void checkModelItem(){
		this.checkBanner_id("首页bannerID");
		this.checkBanner_code("首页banner code");
		this.checkLanguage("语言");
		this.checkImg_url("首页banner图片地址");
		this.checkContents("首页banner文字叙述");
		this.checkUrl("首页banner链接地址");

	}

	/**
	 * 获取广告位列表
	 * @param contents
	 * @param language
	 * @param status
	 * @param page
	 * @return
	 */
	public Pair<List<Record>,PageKit<Record>> queryBannerByPage(String contents, String language, String status, PageKit page){
		String sql = "select banner.seq_uuid," +
				"            banner.banner_id," +
				"            banner.banner_code," +
				"            banner.language," +
				"            banner.contents," +
				"            banner.img_url," +
				"            banner.url," +
				"            banner.orders," +
				"            banner.status," +
				"            banner.create_time," +
				"            status.name status_show," +
				"            is_show.name is_show_name" +
				"       from phjf_web_banner banner" +
				"            left join sys_datalibrary status on status.parent_code = 'sys_status' and status.code = banner.status" +
				"            left join sys_datalibrary is_show on is_show.parent_code = 'sys_isShow' and is_show.code = banner.is_show" +
				"      where 1=1";
		List params = new ArrayList();
		if (F.validate.isNotEmpty(contents)){
			sql += " and banner.contents LIKE concat('%',?,'%') ";
			params.add(contents);
		}
		if (F.validate.isNotEmpty(language)){
			sql += " and banner.language = ? ";
			params.add(language);
		}
		if (F.validate.isNotEmpty(status)){
			sql += " and banner.status = ? ";
			params.add(status);
		}
		sql += " order by banner.orders asc";
		return JFinalDbKit.paginate(Db.use("DBPublic"), page.getNowPage(), page.getRowsPerPage(), sql, params.toArray());
	}

	/**
	 * 通过ID获取广告位
	 * @param seq_uuid
	 * @return
	 */
	public WebBanner findById(String seq_uuid){
		String sql = "select * " +
				"       from phjf_web_banner " +
				"      where seq_uuid = ? " +
				"      limit 1";
		WebBanner data = WebBanner.dao.use("DBPublic").findFirst(sql,seq_uuid);
		if(F.validate.isEmpty(data)){
			data = new WebBanner();
		}
		return data;
	}

	/**
	 *通过banner_code获取广告位
	 * @param banner_code
	 * @return
	 */
	public List<WebBanner> findByBannerCode(String banner_code){
		String sql = "select * " +
				"       from phjf_web_banner " +
				"      where banner_code = ? " +
				"        and status = 1 ";
		return WebBanner.dao.use("DBPublic").find(sql,banner_code);
	}

	/**
	 * 获取语言的中文名
	 * @return
	 */
	public String findLanguage_show(){
		SysDatalibrary library = SysDatalibrary.dao.queryDatalibrary("Phjf", "sys_language", this.getLanguage());
		return library.getName();
	}

	/**
	 * 通过code和语言获取广告位
	 * @param banner_code
	 * @param language
	 * @return
	 */
	public WebBanner findWebBanner(String banner_code, String language){
		String sql = "select * " +
				"       from phjf_web_banner " +
				"      where banner_code = ? " +
				"        and language = ?" +
				"        and status = 1" +
				"      limit 1";
		WebBanner data = WebBanner.dao.use("DBPublic").findFirst(sql,banner_code,language);
		if(F.validate.isEmpty(data)){
			data = new WebBanner();
		}
		return data;
	}

	/**
	 * 获取广告位列表
	 * @return
	 */
	public List<WebBanner> queryBannerList(String language){
		String sql = "select * " +
				"       from phjf_web_banner " +
				"      where language = ? " +
				"        and is_show = 'Y'" +
				"        and status = '1' order by orders ";
		return WebBanner.dao.use("DBPublic").find(sql,language);
	}
}
