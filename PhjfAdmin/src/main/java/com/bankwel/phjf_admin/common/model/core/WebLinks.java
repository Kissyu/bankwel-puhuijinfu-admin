package com.bankwel.phjf_admin.common.model.core;

import com.bankwel.framework.core.F;
import com.bankwel.framework.core.excep.MsgBusinessException;
import com.bankwel.framework.core.kit.JFinalDbKit;
import com.bankwel.framework.core.kit.PageKit;
import com.bankwel.phjf_admin.common.model.core.base.BaseWebLinks;
import com.bankwel.phjf_baseModel.common.model.phjf.CacheWebLinks;
import com.jfinal.plugin.activerecord.Db;
import com.jfinal.plugin.activerecord.Record;
import org.apache.commons.lang3.tuple.Pair;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.UUID;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class WebLinks extends CacheWebLinks<WebLinks> {
	public static final WebLinks dao = new WebLinks().dao();
	/**
	 * 获取合作伙伴列表
	 * @param language
	 * @param name
	 * @param page
	 * @return
	 */
	public Pair<List<Record>,PageKit<Record>> queryLinksByPage(String language, String name, String status,PageKit page){
		String sql = "select link.* , " +
				"            status.name status_show," +
				"            isShow.name is_show_name" +
				"       from phjf_web_links link " +
				"       left join sys_datalibrary isShow on isShow.parent_code = 'sys_isShow' and isShow.code = link.is_show  " +
				"       left join sys_datalibrary status on status.parent_code = 'sys_status' and status.code = link.status  " ;
		List params = new ArrayList();
		if (F.validate.isNotEmpty(language)){
			sql += " where link.language = ? ";
			params.add(language);
		}
		if (F.validate.isNotEmpty(name)){
			sql += " and link.links_name LIKE concat('%',?,'%') ";
			params.add(name);
		}
		if (F.validate.isNotEmpty(status)){
			sql += " and link.status = ? ";
			params.add(status);
		}
		sql += " order by link.orders ";
		return JFinalDbKit.paginate(Db.use("DBPublic"), page.getNowPage(), page.getRowsPerPage(), sql, params.toArray());
	}
	/**
	 * 通过ID获取友情链接
	 * @param seq_uuid
	 * @return
	 */
	public WebLinks findByLinksId(String seq_uuid){
		String sql = "select * " +
				"       from phjf_web_links " +
				"      where seq_uuid = ? " +
				"      limit 1";
		WebLinks data = WebLinks.dao.use("DBPublic").findFirst(sql,seq_uuid);
		if(F.validate.isEmpty(data)){
			data = new WebLinks();
		}
		return data;
	}
	/**
	 * 获取友情链接
	 * @param links_code
	 * @param language
	 * @return
	 */
	public WebLinks findLinksByCode(String links_code, String language) {
		String sql = "select * " +
				"       from phjf_web_links " +
				"      where links_code = ? " +
				"        and language = ? " +
				"        and status = 1 " +
				"      limit 1 ";
		WebLinks data = WebLinks.dao.use("DBPublic").findFirst(sql, links_code, language);
		return data;
	}
	/**
	 * 获取语言的中文名
	 * @return
	 */
	public String findLanguage_show(){
		SysDatalibrary library = SysDatalibrary.dao.queryDatalibrary("Phjf", "sys_language", this.getLanguage());
		return library.getName();
	}
    /**
     * 通过名称获取数据
     * @param name
     * @return
     */
    public WebLinks findByLinksName(String name){
        String sql = "select * " +
                "       from phjf_web_links " +
                "      where links_name = ? " +
                "        and status = 1 ";
        return WebLinks.dao.use("DBPublic").findFirst(sql,name);
    }
    /**
     * 判断该名称是否存在
     * @param seq_uuid
     * @param name
     * @return
     */
    public Boolean isHaveLinksName(String seq_uuid,String name){
        String sql = "select * " +
                "       from phjf_web_links " +
                "      where seq_uuid != ?" +
                "        and links_name = ? " +
                "        and status = 1 ";
        WebLinks mp = WebLinks.dao.use("DBPublic").findFirst(sql,seq_uuid,name);
        if(F.validate.isEmpty(mp)){
            return false;
        }
        return true;
    }
    /**
     * 保存或更新
     * @param opt
     * @return
     */
    public WebLinks saveOrUpdate(AuthOperator opt) throws MsgBusinessException {
		this.checkModelItem();
		if (F.validate.isNotEmpty(this.getLinks_id()) && !(this.getLinks_id().equals(0))) {
            this.setModify_user(opt.getSeq_id() + "");
            this.setModify_time(new Date());
            this.update();
        } else {
            if (F.validate.isEmpty(this.getLinks_code())) {
                this.setLinks_code(SysSeq.dao.generatorWebLinksCode());
            }
            this.setSeq_uuid(UUID.randomUUID().toString());
            this.setIs_show("Y");
            this.setStatus("1");
            this.setCreate_user(opt.getSeq_id() + "");
            this.setCreate_time(new Date());
            this.setModify_user(opt.getSeq_id() + "");
            this.setModify_time(new Date());
            this.save();
        }
        flashCatch(this);
        return this;
    }
    public void checkModelItem(){
		this.checkLinks_id("友情链接ID标识");
		this.checkLinks_code("友情链接标识码");
		this.checkLanguage("语言");
		this.checkLinks_name("友情链接名称");
		this.checkUrl("友情链接地址");
	}
	/**
	 * 获取导航列表
	 * @return
	 */
	public List<WebLinks> queryLinkList(String language){
		String sql = "select * " +
				"       from phjf_web_links " +
				"      where language = ? " +
				"        and is_show = 'Y'" +
				"        and status = '1' order by orders ";
		return WebLinks.dao.use("DBPublic").find(sql,language);
	}

	public List<WebLinks> queryByCode(String links_code){
		String sql = "select * " +
				"       from phjf_web_links " +
				"      where links_code = ? " +
				"        and is_show = 'Y'" +
				"        and status = '1' order by orders ";
		return WebLinks.dao.use("DBPublic").find(sql,links_code);
	}
}
