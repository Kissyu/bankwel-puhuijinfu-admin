package com.bankwel.phjf_admin.common.model.core;

import com.bankwel.framework.core.F;
import com.bankwel.framework.core.kit.PageKit;
import com.bankwel.framework.core.util.DataLoader;
import com.bankwel.framework.support.codis.RedisClient;
import com.bankwel.phjf_admin.common.model.core.base.BaseAuthService;
import com.bankwel.phjf_baseModel.common.model.phjf.CacheAuthService;
import com.bankwel.phjf_baseModel.common.model.phjf.enumKey.AuthServiceEunm;
import org.apache.commons.lang3.tuple.Pair;

import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class AuthService extends CacheAuthService<AuthService> {
	public static final AuthService dao = new AuthService().dao();

	public AuthService saveOrUpdate(AuthService model){
		if (model.getSeq_uuid() != null){
			model.update();
		} else {
			model.setSeq_uuid(UUID.randomUUID().toString());
			model.save();
		}
		flashCatch(model);
		return model;
	}

	public AuthService getById(String seq_uuid){
		String sql = "SELECT * " +
				"       FROM auth_service " +
				"      where seq_uuid = ? " +
				"        and status = 1 " +
				"      limit 1";
		return AuthService.dao.use("DBPublic").findFirst(sql,seq_uuid);
	}

	public AuthService getByurl(String url){
		String sql = "SELECT * " +
				"       FROM auth_service " +
				"      where url = ? " +
				"        and status = 1 " +
				"      limit 1";
		return AuthService.dao.use("DBPublic").findFirst(sql,url);
	}

	/**
	 * @ClassName: AuthService
	 * @Description: 获取服务信息
	 * @author: DukeMr.Chen
	 * @date: 2018/6/6 14:57
	 * @version: V1.0
	 *
	 */
	public AuthService getAuthServiceByUrl(final String url){
		AuthService authService = RedisClient.getClient().get(
				F.strKit.f(AuthServiceEunm.CK_PHJF_AUTHSERVICE_URL.getKey(),url)
				, AuthService.class
				, new DataLoader(){
					public Object load() throws Exception{
						String sql = "select * " +
								"       from auth_service " +
								"      where status = '1' " +
								"        and url = ? ";
						return dao.use("DBPublic").findFirst(sql, url);
					}
				});
		return authService;
	}
}
