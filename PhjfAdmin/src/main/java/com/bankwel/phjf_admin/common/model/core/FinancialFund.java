package com.bankwel.phjf_admin.common.model.core;

import com.bankwel.framework.core.F;
import com.bankwel.framework.core.kit.JFinalDbKit;
import com.bankwel.framework.core.kit.PageKit;
import com.bankwel.phjf_admin.common.model.core.base.BaseFinancialFund;
import com.bankwel.phjf_baseModel.common.model.phjf.CacheFinancialFund;
import com.jfinal.plugin.activerecord.Db;
import com.jfinal.plugin.activerecord.Record;
import org.apache.commons.lang3.tuple.Pair;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.UUID;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class FinancialFund extends CacheFinancialFund<FinancialFund> {
	public static final FinancialFund dao = new FinancialFund().dao();
	/**
	 * 新增修改货币基金产品信息
	 * @param opt
	 * @return
	 */
	public FinancialFund saveOrUpdate(AuthOperator opt){
		if (F.validate.isNotEmpty(this.getFp_id()+"")&&!(this.getFp_id().equals(0))){
			this.setModify_opt(opt.getSeq_id()+"");
			this.setModify_time(new Date());
			this.update();
		} else {
			this.setSeq_uuid(UUID.randomUUID().toString());
			this.setIs_show("Y");
			this.setStatus("1");
			this.setCreate_opt(opt.getSeq_id()+"");
			this.setCreate_time(new Date());
			this.setModify_opt(opt.getSeq_id()+"");
			this.setModify_time(new Date());
			this.save();
		}
		flashCatch(this);
		return this;
	}

	/**
	 * 获取货基产品信息列表
	 * @param title
	 * @param language
	 * @param status
	 * @param page
	 * @return
	 */
	public Pair<List<Record>,PageKit<Record>> queryFinancialFundByPage(String title, String language, String status, PageKit page){
		String sql = "select fp.seq_uuid," +
				"            fp.fp_id," +
				"            fp.fp_code," +
				"            fp.title," +
				"            fp.fp_type," +
				"            fp.bt_code," +
				"            fp.fin_code," +
				"            fp.currency," +
				"            fp.fin_nav," +
				"            fp.fin_nav_total," +
				"            fp.fin_income," +
				"            fp.fin_income_unit," +
				"            fp.fin_income_rate," +
				"            fp.amount_min," +
				"            fp.download_time," +
				"            fp.remark," +
				"            fp.share_count," +
				"            fp.click_count," +
				"            fp.buy_count," +
				"            fp.is_recom," +
				"            fp.order_num," +
				"            fp.publish_date," +
				"            fp.under_date," +
				"            status.name status_show," +
				"            is_show.name is_show_name," +
				"            is_recom.name isRecom_show," +
				"            fp_type.name fp_type_show," +
				"            bt.name bt_name" +
				"       from phjf_financial_fund fp" +
				"            left join sys_datalibrary status on status.parent_code = 'sys_articleStatus' and status.code = fp.status" +
				"            left join sys_datalibrary is_show on is_show.parent_code = 'sys_isShow' and is_show.code = fp.is_show" +
				"            left join sys_datalibrary is_recom on is_recom.parent_code = 'sys_isRecom' and is_recom.code = fp.is_recom" +
				"            left join sys_datalibrary fp_type on fp_type.parent_code = 'fpType' and fp_type.code = fp.fp_type" +
				"            left join phjf_bank_type bt on bt.bt_code = fp.bt_code and bt.language = fp.language" +
				"      where 1=1";
		List params = new ArrayList();
		if (F.validate.isNotEmpty(language)){
			sql += " and fp.language = ? ";
			params.add(language);
		}
		if (F.validate.isNotEmpty(title)){
			sql += " and (fp.title LIKE concat('%',?,'%') or fp.fp_code = ?) ";
			params.add(title);
			params.add(title);
		}
		if (F.validate.isNotEmpty(status)){
			sql += " and fp.status = ? ";
			params.add(status);
		}
		sql += " order by fp.create_time desc";
		return JFinalDbKit.paginate(Db.use("DBPublic"), page.getNowPage(), page.getRowsPerPage(), sql, params.toArray());
	}

	/**
	 * 通过ID获取货币基金产品
	 * @param seq_uuid
	 * @return
	 */
	public FinancialFund findById(String seq_uuid){
		String sql = "select * " +
				"       from phjf_financial_fund " +
				"      where seq_uuid = ? " +
				"      limit 1";
		FinancialFund data = FinancialFund.dao.use("DBPublic").findFirst(sql,seq_uuid);
		if(F.validate.isEmpty(data)){
			data = new FinancialFund();
		}
		return data;
	}

	/**
	 * 通过fp_code获取货币基金产品列表
	 * @param fp_code
	 * @return
	 */
	public List<FinancialFund> findByFfCode(String fp_code){
		String sql = "select * " +
				"       from phjf_financial_fund " +
				"      where fp_code = ? "+
				"        and status != 3 ";
		return FinancialFund.dao.use("DBPublic").find(sql,fp_code);
	}

	/**
	 * 获取语言的中文名
	 * @return
	 */
	public String findLanguage_show(){
		SysDatalibrary library = SysDatalibrary.dao.queryDatalibrary("Phjf", "sys_language", this.getLanguage());
		return library.getName();
	}

	/**
	 * 获取银行类型名称
	 * @return
	 */
	public String findBank_name(){
		BankType bankType = BankType.dao.findByCode(this.getBt_code(), this.getLanguage());
		return bankType.getName();
	}
}
