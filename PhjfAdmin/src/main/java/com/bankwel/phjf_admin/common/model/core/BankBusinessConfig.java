package com.bankwel.phjf_admin.common.model.core;

import com.bankwel.framework.core.F;
import com.bankwel.framework.core.excep.MsgBusinessException;
import com.bankwel.framework.core.kit.JFinalDbKit;
import com.bankwel.framework.core.kit.PageKit;
import com.bankwel.phjf_baseModel.common.model.phjf.CacheBankBusinessConfig;
import com.jfinal.plugin.activerecord.Db;
import com.jfinal.plugin.activerecord.Record;
import org.apache.commons.lang3.tuple.Pair;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.UUID;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class BankBusinessConfig extends CacheBankBusinessConfig<BankBusinessConfig> {
	public static final BankBusinessConfig dao = new BankBusinessConfig().dao();
	/**
	 * 保存或修改银行业务配置
	 * @param opt
	 * @return
	 */
	public BankBusinessConfig saveOrUpdate(AuthOperator opt) throws MsgBusinessException {
		this.checkModelItem();
		if (this.getSeq_uuid() != null){
			this.setModify_opt(opt.getSeq_id()+"");
			this.setModify_time(new Date());
			if(F.validate.isEmpty(this.getIs_show())){

			}
			this.update();
		} else {
			this.setSeq_uuid(UUID.randomUUID().toString());
			this.setCreate_opt(opt.getSeq_id()+"");
			this.setCreate_time(new Date());
			this.setModify_opt(opt.getSeq_id()+"");
			this.setModify_time(new Date());
			this.save();
		}
		flashCatch(this);
		return this;
	}

	public void checkModelItem() {
		//check
		this.checkBt_code("银行类型编码");
		this.checkBusiness_code("银行业务");
	}
	/**
	 * 获取银行业务配置列表
	 * @param bt_name
	 * @param status
	 * @return
	 */
	public Pair<List<Record>,PageKit<Record>> queryBankBbcByPage(String bt_name,  String business_code, String status ,String device_type, PageKit page){
		String sql = "select bbc.seq_uuid," +
				"            bbc.seq_id," +
				"            bbc.bt_code," +
				"            bt.name bt_name, " +
				"            bbc.business_code," +
				"			 bbc.device_type," +
				"            bbc.value," +
				"            bbc.is_show," +
				"            bbc.status," +
				"            bbc.create_time," +
				"	         bbc.app_version_1," +
				"            bbc.app_version_2," +
				"            bbc.app_version_3," +
				"            status.name status_name," +
				"            business_code.name business_code_name," +
				"            device_type.name device_type_name," +
				"            is_show.name is_show_name," +
				"            concat_ws('.',bbc.app_version_1,bbc.app_version_2,bbc.app_version_3) app_version  " +
				"       from phjf_bank_business_config bbc" +
				"            left join phjf_bank_type bt on bt.bt_code = bbc.bt_code " +
				"            left join sys_datalibrary status on status.parent_code = 'sys_status' and status.code = bbc.status" +
				"            left join sys_datalibrary device_type on device_type.parent_code = 'sys_deviceType' and device_type.code = bbc.device_type" +
				"            left join sys_datalibrary business_code on business_code.parent_code = 'bank_function' and business_code.code = bbc.business_code" +
				"            left join sys_datalibrary is_show on is_show.parent_code = 'sys_isShow' and is_show.code = bbc.is_show" +
				"      where 1=1";
		List params = new ArrayList();
		if (F.validate.isNotEmpty(bt_name)){
			sql += " and (bt.name LIKE concat('%',?,'%'))";
			params.add(bt_name);
		}
		if (F.validate.isNotEmpty(status)){
			sql += " and bbc.status = ? ";
			params.add(status);
		}
		if (F.validate.isNotEmpty(device_type)){
			sql += " and bbc.device_type = ? ";
			params.add(device_type);
		}
		if (F.validate.isNotEmpty(business_code)){
			sql += " and bbc.business_code = ? ";
			params.add(business_code);
		}
		sql += " order by bbc.bt_code asc, bbc.business_code asc, bbc.device_type asc, bbc.app_version_1 desc, bbc.app_version_2 desc, bbc.app_version_3 desc";
		return JFinalDbKit.paginate(Db.use("DBPublic"), page.getNowPage(), page.getRowsPerPage(), sql, params.toArray());
	}
	/**
	 * 通过银行类型代码获取银行业务配置
	 * @param bt_code
	 * @return
	 */
	public BankBusinessConfig findByCode(String bt_code,String business_code){
		String sql = "select * " +
				"       from phjf_bank_business_config " +
				"      where bt_code = ? " +
				"        and business_code = ? " +
				"        and status = 1" +
				"        and is_show = 'Y' " +
				"      limit 1 ";
		BankBusinessConfig data = dao.use("DBPublic").findFirst(sql, bt_code,business_code);
		if (F.validate.isEmpty(data)){
			data = new BankBusinessConfig();
		}
		return data;
	}
    /**
     * 通过银行信息代码获取银行业务配置
     * @param bt_code
     * @return
     */
    public BankBusinessConfig findByInfo(String bt_code,String business_code,String device_type,String app_version_1,String app_version_2,String app_version_3){
        String sql = "select * " +
                "       from phjf_bank_business_config " +
                "      where bt_code = ? " +
				"        and business_code = ?" +
				"        and device_type = ?" +
				"        and app_version_1 = ?" +
				"        and app_version_2 = ?" +
				"        and app_version_3 = ?" +
                "        and status = 1" +
                "        and is_show = 'Y' " +
                "      limit 1 ";
        BankBusinessConfig data = dao.use("DBPublic").findFirst(sql, bt_code,business_code,device_type,app_version_1,app_version_2,app_version_3);
        if (F.validate.isEmpty(data)){
            data = new BankBusinessConfig();
        }
        return data;
    }
	/**
	 * 通过ID获取银行业务配置
	 * @param seq_uuid
	 * @return
	 */
	public BankBusinessConfig findById(String seq_uuid){
		String sql = "select * " +
				"       from phjf_bank_business_config " +
				"      where seq_uuid = ? " +
				"      limit 1 ";
		BankBusinessConfig data = dao.use("DBPublic").findFirst(sql, seq_uuid);
		if (F.validate.isEmpty(data)){
			data = new BankBusinessConfig();
		}
		return data;
	}
	/**
	 * 判断该银行业务配置是否存在
	 * @param seq_uuid
	 * @return
	 */
	public Boolean isHaveBbcName(String seq_uuid,String bt_code,String business_code,String device_type,String app_version_1,String app_version_2,String app_version_3){
		String sql = "select * " +
				"       from phjf_bank_business_config " +
				"      where seq_uuid != ?" +
				"        and bt_code = ? " +
                "        and business_code = ?" +
                "        and device_type = ?" +
                "        and app_version_1 = ?" +
                "        and app_version_2 = ?" +
                "        and app_version_3 = ?" +
				"        and status = 1 ";
		BankBusinessSetting bt = BankBusinessSetting.dao.use("DBPublic").findFirst(sql,seq_uuid,bt_code,business_code,device_type,app_version_1,app_version_2,app_version_3);
		if(F.validate.isEmpty(bt)){
			return false;
		}
		return true;
	}
}
