package com.bankwel.phjf_admin.common.model.core;

import com.bankwel.framework.core.F;
import com.bankwel.framework.core.excep.MsgBusinessException;
import com.bankwel.phjf_admin.common.model.core.base.BaseUserAppauth;
import com.bankwel.phjf_baseModel.common.model.phjf.CacheUserAppauth;

import java.util.Date;
import java.util.UUID;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class UserAppauth extends CacheUserAppauth<UserAppauth> {
	public static final UserAppauth dao = new UserAppauth().dao();

	/**
	 * 新增用户APP登录鉴权
	 * @param opt
	 * @return
	 */
	public UserAppauth saveOrUpdate(AuthOperator opt) throws MsgBusinessException{
		this.checkModelItem();
		if (F.validate.isNotEmpty(this.getUad_id()+"")&&!(this.getUad_id().equals(0))){
			this.setModify_opt(opt.getSeq_id()+"");
			this.setModify_time(new Date());
			this.update();
		} else {
			this.setSeq_uuid(UUID.randomUUID().toString());
			this.setStatus("1");
			this.setCreate_opt(opt.getSeq_id()+"");
			this.setCreate_time(new Date());
			this.setModify_opt(opt.getSeq_id()+"");
			this.setModify_time(new Date());
			this.setReg_time(new Date());
			this.save();
		}
		flashCatch(this);
		return this;
	}
	public void checkModelItem(){
		this.checkUser_id("用户ID");
		this.checkJpush_id("极光推送ID");
		this.checkApp_code("app编码");
		this.checkPassword("登录密码");
		this.checkHand_password("手势密码");
		this.checkLanguage("语言");
		this.checkPackage_name("APP包名");
		this.checkDevice_type("登录设备类型");
		this.checkDevice_version("登录设备版本");
		this.checkDevice_num("登录设备号");
		this.checkApp_version("登录app版本号");
		this.checkToken("鉴权token");
		this.checkReg_time("创建时间");
		this.checkLast_login_time("最后登录时间");
		this.checkLast_visit_time("最后使用时间");
		this.checkToken_exp_time("失效时间");
		this.checkStatus("APP登录鉴权状态");
		this.checkRequest_token("请求Token");
	}
	/**
	 * 通过用户ID获取用户APP登录鉴权
	 * @param user_id
	 * @return
	 */
	public UserAppauth findById(String user_id, String app_code){
		String sql = "select * " +
				"       from phjf_user_appauth " +
				"      where user_id = ? " +
                "        and app_code = ?" +
				"      limit 1";
		UserAppauth data = UserAppauth.dao.use("DBPublic").findFirst(sql,user_id,app_code);
		if(F.validate.isEmpty(data)){
			data = new UserAppauth();
		}
		return data;
	}
}
