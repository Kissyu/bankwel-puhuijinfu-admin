package com.bankwel.phjf_admin.common.model.core;

import com.bankwel.framework.core.F;
import com.bankwel.framework.core.kit.JFinalDbKit;
import com.bankwel.framework.core.kit.PageKit;
import com.bankwel.phjf_admin.common.model.core.base.BaseBankBankcardTradelog;
import com.bankwel.phjf_baseModel.common.model.phjf.CacheBankBankcardTradelog;
import com.jfinal.plugin.activerecord.Db;
import com.jfinal.plugin.activerecord.Record;
import org.apache.commons.lang3.tuple.Pair;

import java.util.ArrayList;
import java.util.List;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class BankBankcardTradelog extends CacheBankBankcardTradelog<BankBankcardTradelog> {
	public static final BankBankcardTradelog dao = new BankBankcardTradelog().dao();

	/**
	 * 获取交易记录列表
	 * @param bt_name
	 * @param user_name
	 * @param status
	 * @param page
	 * @return
	 */
	public Pair<List<Record>,PageKit<Record>> queryBankcardTradelogByPage(String bt_name,String user_name, String status, PageKit page){
		String sql = "select log.seq_uuid," +
				"            log.seq_id," +
				"            log.ubc_id," +
				"            log.user_id," +
				"            user.user_name," +
				"            log.trade_seq," +
				"            log.bank_card_no," +
				"            log.bind_card_no," +
				"            log.amount," +
				"            log.apply_time," +
				"            log.finish_time," +
				"            log.invalid_time," +
				"            log.status," +
				"            log.create_time," +
				"            bt.name bt_name," +
				"            status.name status_show," +
				"            tradeType.name tradeType_show," +
				"            currency.name currency_show" +
				"       from phjf_bank_bankcard_tradelog log " +
				"            left join phjf_user_info user on user.user_id = log.user_id" +
				"            left join phjf_bank_type bt on bt.bt_code = log.bt_code and bt.language = 'ZH_SIMP'" +
				"            left join sys_datalibrary tradeType on tradeType.parent_code = 'sys_tradeType' and tradeType.code = log.trade_type" +
				"            left join sys_datalibrary status on status.parent_code = 'sys_tradeStatus' and status.code = log.status" +
				"            left join sys_datalibrary currency on currency.parent_code = 'sys_currencyType' and currency.code = log.currency" +
				"      where 1=1";
		List params = new ArrayList();
		if (F.validate.isNotEmpty(bt_name)){
			sql += " and bt.name like concat('%',?,'%') ";
			params.add(bt_name);
		}
		if (F.validate.isNotEmpty(user_name)){
			sql += " and user.user_name = ? ";
			params.add(user_name);
		}
		if (F.validate.isNotEmpty(status)){
			sql += " and log.status = ? ";
			params.add(status);
		}
		sql += " order by log.create_time desc";
		return JFinalDbKit.paginate(Db.use("DBPublic"), page.getNowPage(), page.getRowsPerPage(), sql, params.toArray());
	}

	/**
	 * 通过ID获取用户
	 * @param seq_uuid
	 * @return
	 */
	public BankBankcardTradelog findById(String seq_uuid){
		String sql = "select * " +
				"       from phjf_bank_bankcard_tradelog " +
				"      where seq_uuid = ? " +
				"      limit 1";
		BankBankcardTradelog data = BankBankcardTradelog.dao.use("DBPublic").findFirst(sql,seq_uuid);
		if(F.validate.isEmpty(data)){
			data = new BankBankcardTradelog();
		}
		return data;
	}

}
