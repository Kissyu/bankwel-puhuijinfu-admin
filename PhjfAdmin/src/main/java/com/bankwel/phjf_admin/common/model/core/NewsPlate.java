package com.bankwel.phjf_admin.common.model.core;

import com.bankwel.framework.core.F;
import com.bankwel.framework.core.excep.MsgBusinessException;
import com.bankwel.framework.core.kit.JFinalDbKit;
import com.bankwel.framework.core.kit.PageKit;
import com.bankwel.phjf_admin.common.model.core.base.BaseNewsPlate;
import com.bankwel.phjf_baseModel.common.model.phjf.CacheNewsPlate;
import com.bankwel.phjf_baseModel.common.model.phjf.enumKey.ApiNewsPlateEnum;
import com.jfinal.plugin.activerecord.Db;
import com.jfinal.plugin.activerecord.Record;
import org.apache.commons.lang3.tuple.Pair;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.UUID;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class NewsPlate extends CacheNewsPlate<NewsPlate> {
	public static final NewsPlate dao = new NewsPlate().dao();
	/**
	 * 新增或修改新闻版块
	 * @param opt
	 * @return
	 */
	public NewsPlate saveOrUpdate(AuthOperator opt) throws MsgBusinessException{
		this.checkModelItem();
		if (F.validate.isNotEmpty(this.getPlate_id()+"")&&!(this.getPlate_id().equals(0))){
			this.setModify_opt(opt.getSeq_id()+"");
			this.setModify_time(new Date());
			if(F.validate.isEmpty(this.getIs_show())){
				this.setIs_show("Y");
			}
			this.update();
		} else {
			if (F.validate.isEmpty(this.getPlate_code())){
				this.setPlate_code(SysSeq.dao.generatorNewsPlateCode());
			}
			this.setSeq_uuid(UUID.randomUUID().toString());
			this.setIs_show("Y");
			this.setStatus("1");
			this.setCreate_opt(opt.getSeq_id()+"");
			this.setCreate_time(new Date());
			this.setModify_opt(opt.getSeq_id()+"");
			this.setModify_time(new Date());
			this.save();
		}
		String key1 =F.strKit.f(ApiNewsPlateEnum.CK_Phjf_Model_NewsPlate_KEY1.getKey(),this.getLanguage());
		flashCatch(this);
		return this;
	}

	public void checkModelItem() {
		this.checkName("板块名称");
		this.checkOrder_num("板块序号");
		this.checkRemark("板块备注");
	}

	/**
	 * 获取新闻版块列表
	 * @param name
	 * @param language
	 * @param status
	 * @param page
	 * @return
	 */
	public Pair<List<Record>,PageKit<Record>> queryNewsPlateByPage(String name, String language, String status, PageKit page){
		String sql = "select plate.seq_uuid," +
				"            plate.plate_id," +
				"            plate.plate_code," +
				"            plate.language," +
				"            plate.name," +
				"            plate.order_num," +
				"            plate.remark," +
				"            plate.status," +
				"            plate.create_time," +
				"            status.name status_show," +
				"            is_show.name is_show_name," +
				"            opt.operate_name create_opt_name" +
				"       from phjf_news_plate plate" +
				"            left join sys_datalibrary status on status.parent_code = 'sys_status' and status.code = plate.status" +
				"            left join sys_datalibrary is_show on is_show.parent_code = 'sys_isShow' and is_show.code = plate.is_show" +
				"            left join auth_operator opt on opt.seq_id = plate.create_opt" +
				"      where 1=1";
		List params = new ArrayList();
		if (F.validate.isNotEmpty(name)){
			sql += " and (plate.name = ? or plate.plate_code = ?)";
			params.add(name);
			params.add(name);
		}
		if (F.validate.isNotEmpty(language)){
			sql += " and plate.language = ? ";
			params.add(language);
		}
		if (F.validate.isNotEmpty(status)){
			sql += " and plate.status = ? ";
			params.add(status);
		}
		sql += " order by plate.create_time desc";
		return JFinalDbKit.paginate(Db.use("DBPublic"), page.getNowPage(), page.getRowsPerPage(), sql, params.toArray());
	}

	/**
	 * 通过ID获取新闻版块
	 * @param seq_uuid
	 * @return
	 */
	public NewsPlate findById(String seq_uuid){
		String sql = "select * " +
				"       from phjf_news_plate " +
				"      where seq_uuid = ? " +
				"      limit 1";
		NewsPlate data = NewsPlate.dao.use("DBPublic").findFirst(sql,seq_uuid);
		if(F.validate.isEmpty(data)){
			data = new NewsPlate();
		}
		return data;
	}

	/**
	 *通过plate_code获取新闻版块
	 * @param plate_code
	 * @return
	 */
	public List<NewsPlate> findByPlateCode(String plate_code){
		String sql = "select * " +
				"       from phjf_news_plate " +
				"      where plate_code = ? " +
				"        and status = 1 ";
		return NewsPlate.dao.use("DBPublic").find(sql,plate_code);
	}

	/**
	 *通过版块名称获取新闻版块
	 * @param name
	 * @return
	 */
	public NewsPlate findByPlateName(String name){
		String sql = "select * " +
				"       from phjf_news_plate " +
				"      where name = ? " +
				"        and status = 1 ";
		NewsPlate data = NewsPlate.dao.use("DBPublic").findFirst(sql,name);
		if(F.validate.isEmpty(data)){
			data = new NewsPlate();
		}
		return data;
	}

	/**
	 * 获取语言的中文名
	 * @return
	 */
	public String findLanguage_show(){
		SysDatalibrary library = SysDatalibrary.dao.queryDatalibrary("Phjf", "sys_language", this.getLanguage());
		return library.getName();
	}

	/**
	 * 获取新闻版块
	 * @param plate_code
	 * @param language
	 * @return
	 */
	public NewsPlate findNewsPlate(String plate_code, String language) {
		String sql = "select * " +
				"       from phjf_news_plate " +
				"      where plate_code = ? " +
				"        and language = ? " +
				"        and status = 1 " +
				"      limit 1 ";
		NewsPlate data = NewsPlate.dao.use("DBPublic").findFirst(sql, plate_code, language);
		if(F.validate.isEmpty(data)){
			data = new NewsPlate();
		}
		return data;
	}

	/**
	 * 修改前判断该新闻版块名称是否存在
	 * @param seq_uuid
	 * @param name
	 * @return
	 */
	public Boolean isHavePlate(String seq_uuid,String name){
		String sql = "select * " +
				"       from phjf_news_plate " +
				"      where seq_uuid !=? " +
				"        and name = ?" +
				"        and status = 1 ";
		NewsPlate data = NewsPlate.dao.use("DBPublic").findFirst(sql,seq_uuid,name);
		if(F.validate.isEmpty(data)){
			return false;
		}
		return true;
	}
}
