package com.bankwel.phjf_admin.common.model.core;

import com.bankwel.phjf_admin.common.model.core.base.BaseAuthResourceService;
import com.bankwel.phjf_baseModel.common.model.phjf.CacheAuthResourceService;

import java.util.List;
import java.util.UUID;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class AuthResourceService extends CacheAuthResourceService<AuthResourceService> {
	public static final AuthResourceService dao = new AuthResourceService().dao();

	/**
	 * 新增或修改资源服务关系
	 * @param model
	 * @return
	 */
	public AuthResourceService saveOrUpdate(AuthResourceService model){
		if (model.getSeq_uuid() != null){
			model.update();
		} else {
			model.setSeq_uuid(UUID.randomUUID().toString());
			model.save();
		}
		flashCatch(model);
		return model;
	}

	/**
	 *通过资源ID和服务ID获取资源服务关系
	 * @param type_seq_id
	 * @param service_seq_id
	 * @return
	 */
    public AuthResourceService getByTypeSer(int type_seq_id,int service_seq_id){
        String sql = "select * " +
                "       from auth_resource_service " +
                "      where type_seq_id = ? " +
                "        and service_seq_id = ? " +
                "        and status = 1 " +
                "      limit 1";
        return AuthResourceService.dao.use("DBPublic").findFirst(sql,type_seq_id,service_seq_id);
    }

    /**
     * @Title:
     * @Description: 通过服务ID获取资源服务关系
     * @author: DukeMr.Chen
     */
	public AuthResourceService getByServiceId(int service_seq_id){
		String sql = "select * " +
				"       from auth_resource_service " +
				"      where service_seq_id = ? " +
				"        and status = 1 " +
				"      limit 1";
		return AuthResourceService.dao.use("DBPublic").findFirst(sql,service_seq_id);
	}

	/**
	 * 通过seq_id获取资源服务关系
	 * @param seq_id
	 * @return
	 */
	public List<AuthResourceService> queryByServiceId(Integer seq_id){
		String sql = "select * " +
                "       from auth_resource_service " +
                "      where seq_id = ? " +
                "        and status = 1";
		return AuthResourceService.dao.use("DBPublic").find(sql,seq_id);
	}
}
