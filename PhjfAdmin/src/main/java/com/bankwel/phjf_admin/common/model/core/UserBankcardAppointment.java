package com.bankwel.phjf_admin.common.model.core;

import com.bankwel.framework.core.F;
import com.bankwel.framework.core.kit.JFinalDbKit;
import com.bankwel.framework.core.kit.PageKit;
import com.bankwel.phjf_admin.common.constants.admin.AdminConstants;
import com.bankwel.phjf_admin.common.model.core.base.BaseUserBankcardAppointment;
import com.bankwel.phjf_baseModel.common.model.phjf.CacheUserBankcardAppointment;
import com.jfinal.plugin.activerecord.Db;
import com.jfinal.plugin.activerecord.Record;
import org.apache.commons.lang3.tuple.Pair;

import java.util.ArrayList;
import java.util.List;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class UserBankcardAppointment extends CacheUserBankcardAppointment<UserBankcardAppointment> {
	public static final UserBankcardAppointment dao = new UserBankcardAppointment().dao();


	/**
	 * 用户预约开户查询
	 * @param bank_name
	 * @param mp_name
	 * @param true_name
	 * @param mobilephone
	 * @param status
     * @param page
     * @return
     */
	public Pair<List<Record>,PageKit<Record>> queryUserBankCardAmByPage(String bank_name, String mp_name, String true_name, String mobilephone, String status, PageKit page){
		String sql = "select bank.name bank_name " +
				"            ,appointment.mp_code " +
				"            ,managepoint.name mp_name " +
				"            ,user.user_name " +
				"            ,user.true_name " +
				"            ,user.mobilephone " +
				"            ,appointment.am_time " +
				"            ,appointment.bank_accept_time " +
				"            ,appointment.bank_refuse_time " +
				"            ,opt.true_name bank_opt_name " +
				"            ,status.name status_show " +
				"            ,isShow.name is_show " +
				"            ,appointment.create_time " +
				"       from phjf_user_bankcard_appointment appointment " +
				"            left join phjf_bank_info bank on bank.bank_code = appointment.bank_code and bank.language = ? " +
				"            left join phjf_managepoint_info managepoint on managepoint.mp_code = appointment.mp_code and managepoint.language = ? " +
				"            left join phjf_user_info user on user.user_id = appointment.user_id " +
				"            left join auth_operator opt on opt.seq_id = appointment.bank_opt " +
				"            left join sys_datalibrary isShow on isShow.parent_code = 'sys_isShow' and isShow.code = appointment.is_show " +
				"            left join sys_datalibrary status on status.parent_code = 'appointment_status' and status.code = appointment.status " +
				"      where 1 = 1 ";
		List params = new ArrayList();
		params.add(AdminConstants.LanguageType.ZH_SIMP.value);
		params.add(AdminConstants.LanguageType.ZH_SIMP.value);
		if (F.validate.isNotEmpty(bank_name)){
			sql += " and (bank.name like concat('%',?,'%') or bank.bank_code = ?) ";
			params.add(bank_name);
			params.add(bank_name);
		}
		if (F.validate.isNotEmpty(mp_name)){
			sql += " and (managepoint.name like concat('%',?,'%') or managepoint.mp_code = ?) ";
			params.add(mp_name);
			params.add(mp_name);
		}
		if (F.validate.isNotEmpty(true_name)){
			sql += " and user.true_name like concat('%',?,'%') ";
			params.add(true_name);
		}
		if (F.validate.isNotEmpty(mobilephone)){
			sql += " and user.mobilephone = ? ";
			params.add(mobilephone);
		}
		if (F.validate.isNotEmpty(status)){
			sql += " and appointment.status = ? ";
			params.add(status);
		}
		sql += " order by appointment.create_time desc";
		return JFinalDbKit.paginate(Db.use("DBPublic"), page.getNowPage(), page.getRowsPerPage(), sql, params.toArray());
	}
}
